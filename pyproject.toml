[project]
name = "sharif_ocw_scrapy_downloader"
dynamic = [ "version" ]
description = "MVP for Sharif OCW Scrapy's Downloader"
authors = [ { name = "Mdevpro78", email = "mdevpro.2020@gmail.com" } ]
readme = "README.md"
urls = { homepage = "https://github.com/Mdevpro78/sharif-ocw-scrapy-downloader" }
requires-python = ">= 3.12"
license = { text = "MIT" }
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]

# Core dependencies used by the package itself
dependencies = [
  "hatch-vcs[dev]>=0.5.0",
  "orjson>=3.11.3",
  "pydantic>=2.9.2",
  "pydantic-settings>=2.10.1",
  "scrapy",
  "spidermon>=1.24.0",
]

# === PEP 621 Standard Optional Dependencies ===
[dependency-groups]

# Testing tools and frameworks
test = [
  "tox>=4.24.2",
  "pytest>=7.4.0",
  "pytest-cov>=4.1.0",
  "pytest-xdist>=3.3.1",
]

# Documentation generation tools
docs = [
  # MkDocs core and themes
  "mkdocs-material>=9.6.8",
  "mkapi>=4.1.0",
  "pymdown-extensions>=10.14.3",
  # MkDocs plugins
  "mkdocs-puml>=2.3.0",
  "mkdocs-include-markdown-plugin[cache]>=7.1.5",
  "mdx-include>=1.4.2",
  "mkdocs-awesome-pages-plugin>=2.10.1",
  "mkdoxy>=1.2.7",
  "mkdocs-meta-descriptions-plugin>=4.0.0",
  "mkdocs-markdownextradata-plugin>=0.2.6",
  "mkdocstrings>=0.29.0",
  "mkdocstrings-python>=1.16.5",
  "mkdocs-macros-plugin>=1.3.7",
  "mkdocs-macros-includex>=0.0.6",
  "mkdocs-redirects>=1.2.2",
  "mkdocs-minify-plugin>=0.8.0",
  "mkapi>=4.1.0",
  "pymdown-extensions>=10.14.3",
  "mkdocs-git-revision-date-localized-plugin>=1.4.5",
  "mike>=2.1.3",
  "neoteroi-mkdocs>=1.1.0",
  "mkdocs-material-adr>=1.1.2",
  "mkdocs-section-index>=0.3.9",
  "mkdocs-version-annotations>=1.0.0",
  "mdx-include>=1.4.2",
  "mkdoxy>=1.2.7",
  # Python API documentation
  "mkdocstrings>=0.29.0",
  "mkdocstrings-python>=1.16.5",
  "griffe-typingdoc>=0.2.8",
  "pymarkdownlnt>=0.9.29",
  "mkdocs-material-extensions>=1.3.1",
  "mkdocs-glightbox>=0.4.0",
]

# Code quality and formatting tools
lint = [
  "pre-commit>=4.1.0",
  "mypy>=1.15.0",
  "ruff>=0.10.0",
  "black>=25.1.0",
  "types-requests>=2.32.0.20250306",
  "mdformat>=0.7.22",
  "validate-pyproject[all]>=0.24",
  "pyupgrade>=3.19.1",
  "openapi-spec-validator>=0.7.1",
  "add-trailing-comma>=3.1.0",
  "bashate>=2.1.1",
  "safety>=3.3.1",
  "commitizen>=4.4.1",
  "yamllint>=1.36.0",
  "uv-audit>=0.1.9",
  "mdformat-gfm>=0.4.1",
  "mdformat-mkdocs>=4.1.2",
  "mdformat-frontmatter>=2.0.8",
  "mdformat-footnote>=0.1.1",
  "mdformat-tables>=1.0.0",
  "mdformat-toc>=0.3.0",
  "mdformat-beautysh>=0.1.1",
  "mdformat-black>=0.1.1",
  "mdformat-gfm-alerts>=1.0.1",
  "mdformat-myst>=0.2.1",
  "mdformat-config>=0.2.1",
  "mdformat-ruff>=0.1.3",
  "mdformat-web>=0.2.0",
  "mdformat-simple-breaks>=0.0.1",
]

# Development environment - combines all extras for convenience
dev = [
  # Include all groups via references instead of duplicating
  "sharif_ocw_scrapy_downloader[test,docs,lint]",
  "hatch>=1.14.0",
  "python-semantic-release>=9.21.0",
  "git-cliff>=2.10.0",
]

# For compatibility with tools that don't support nested references
all = [ "sharif_ocw_scrapy_downloader[test,docs,lint]" ]

[build-system]
requires = [ "hatchling", "hatch-vcs" ]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

  [tool.hatch.version.raw-options]
  version_scheme = "python-simplified-semver"
  local_scheme = "no-local-version"

[tool.hatch.build.hooks.vcs]
version-file = "src/_version.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
include = [ "src" ]
exclude = [
  "/tests",
  "/docs",
  "/scripts",
  "/.github",
  "/.gitignore",
]

[tool.hatch.build.targets.wheel]
packages = [ "src" ]


[tool.hatch.build]
directory = "./build"

# === Rye-Specific Configuration ===
[tool.uv]
cache-dir = "./.uv_cache"
managed = true

  [tool.uv.pip]
  strict = true
