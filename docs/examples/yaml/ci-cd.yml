---
name: CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch: true  # Allow manual triggering

jobs:
  test:
    name: Run Tests
    runs-on: ${{ "{{ matrix.os }}" }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.11", "3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ "{{ matrix.python-version }}" }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ "{{ matrix.python-version }}" }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv tox tox-gh-actions
          uv pip install -e .[test]

      - name: Run tests with tox
        run: tox

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv
          uv pip install -e .[lint]

      - name: Run ruff
        run: ruff check .

      - name: Run black
        run: black --check .

      - name: Run mypy
        run: mypy .

  docs:
    name: Build and Deploy Docs
    runs-on: ubuntu-latest
    needs: [test, lint]
    # Only deploy docs when pushing to main/master, not on PRs
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get all history for proper versioning

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv
          uv pip install -e .[docs]
          uv pip install mike

      - name: Configure Git user
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Build documentation
        run: mkdocs build -v

      - name: Deploy documentation to GitHub Pages
        run: |
          # If using versioned docs with mike
          mike deploy --push --update-aliases $(git describe --tags --abbrev=0) latest

          # Alternatively, for non-versioned docs, use the mkdocs gh-deploy command
          # mkdocs gh-deploy --force

  # Add deployment job for production releases
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [test, lint, docs]
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Build package
        run: python -m build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          generate_release_notes: true

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ "{{ secrets.PYPI_USERNAME }}" }}
          TWINE_PASSWORD: ${{ "{{ secrets.PYPI_PASSWORD }}" }}
        run: twine upload --skip-existing dist/*

# Configuration for tox to run in GitHub Actions
# Add this to tox.ini:
# [gh-actions]
# python =
#     3.11: py311
#     3.12: py312
