# Default: Auto-detect text files and normalize line endings to LF
* text=auto eol=lf

# Python source files: Enforce UTF‑8 encoding and enable Python-aware diffs
*.py     text diff=python encoding=utf-8
*.pyi    text diff=python encoding=utf-8
*.pyw    text diff=python encoding=utf-8

# Python project configuration files: Consistent UTF‑8 encoding
*.toml                   text encoding=utf-8
pyproject.toml           text encoding=utf-8
requirements*.txt         text encoding=utf-8
.pre-commit-config.yaml   text encoding=utf-8

# Documentation, configuration, and data files: Uniform encoding and enhanced diffs for Markdown
*.md   text encoding=utf-8 diff=markdown
*.rst  text encoding=utf-8
*.json text encoding=utf-8
*.yaml text encoding=utf-8
*.yml  text encoding=utf-8
*.ini  text encoding=utf-8
*.cfg  text encoding=utf-8

# Explicitly declare files that should use LF line endings (scripts and makefiles)
*.sh       text eol=lf
Makefile   text eol=lf
*.mk       text eol=lf

# Jupyter Notebooks: Ensure UTF‑8 encoding for proper text processing
*.ipynb text encoding=utf-8

# Cython source files: Enable proper diffing with enforced UTF‑8 encoding
*.pyx   text diff=python encoding=utf-8

# Scalable Vector Graphics: Enforce UTF‑8 encoding and enable XML-aware diffs
*.svg  text encoding=utf-8 diff=xml

# Additional text files: Enforce LF and UTF‑8 for plain text files
*.txt  text eol=lf working-tree-encoding=utf-8

# Binary and compiled files: Prevent alterations by marking as binary
*.db     binary
*.p      binary
*.pkl    binary
*.pickle binary
*.pyc    binary
*.pyd    binary
*.pyo    binary
*.png   binary
*.jpg   binary
*.gif   binary
*.ico   binary
*.zip   binary
*.pdf   binary

# Exclude Git-specific files from exports
.gitattributes export-ignore
.gitignore     export-ignore
